#include <stdio.h>
#include <sys/shm.h>
#include <string.h>
#include <stdlib.h>
#include "shmdata.h"
#include <unistd.h>
#define BUF_SIZE 256

int main() {
    int id = 0;//共享内存标识符
    char *data = NULL;//共享内存地址
    char buf[BUF_SIZE];//缓冲区
    int status = 1;//程序运行状态
    struct shared_data *shared = NULL;//用于存储待传输数据

    //创建共享内存
    id = shmget((key_t)1234, 20, IPC_CREAT|0777);
    if (id == -1){
        fprintf(stderr,"Shmget failed\n");
        exit(EXIT_FAILURE);
    }

    //将共享内存连接到当前进程的地址空间
    data = shmat(id, 0, 0);
    if (data == NULL){
        fprintf(stderr, "Shmat failed\n");
        exit(EXIT_FAILURE);
    }
    printf("Memory attached at %X\n", (int)data);

    //动手！！！
    shared = (struct shared_data*)data;
    while(status){
        while(shared->written == 1)//表明python正在读取数据
        {
            printf("Waiting for python\n");
        }

        printf("Enter some text: ");
        fgets(buf, BUF_SIZE, stdin);
        strncpy(shared->text, buf, BUF_SIZE);
        shared->written = 1;//将written赋值为1，表明写好了
        if (strncmp(buf, "end", 3) == 0)//如果侦测到end则退出循环
            status = 0;
    }

    //把共享内存从当前进程中分离
    if(shmdt(data) == -1)
    {
        fprintf(stderr, "Shmdt failed\n");
        exit(EXIT_FAILURE);
    }
    sleep(2);
    exit(EXIT_SUCCESS);
}
